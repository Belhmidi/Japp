// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: m1NBpNyVff55Zfidoo96K
// Component: Q64BnQZXqBVa
import * as React from "react";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavBar from "../../NavBar"; // plasmic-import: SDaEQZxE2LvS/component
import Button from "../../Button"; // plasmic-import: RwhbLl_Om_ZC/component
import Price from "../../Price"; // plasmic-import: OZeHOUXqMPbS/component
import Select from "../../Select"; // plasmic-import: KLsgusME3qGg/component
import Select__Option from "../../Select__Option"; // plasmic-import: fbdLZICHv360/component
import Separator from "../../Separator"; // plasmic-import: YrwEWRRF0zp_/component
import ProductCard from "../../ProductCard"; // plasmic-import: Jw8LASADv3c6/component
import Rating from "../../Rating"; // plasmic-import: HrCA_7p3nRe1/component
import Footer from "../../Footer"; // plasmic-import: tq70WOqYWkeM/component

import { useScreenVariants as useScreenVariantsglcu7Rs72YfE } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: glcu7RS72yfE/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_ecommerce_starter.module.css"; // plasmic-import: m1NBpNyVff55Zfidoo96K/projectcss
import sty from "./PlasmicItem.module.css"; // plasmic-import: Q64BnQZXqBVa/css

import HomeIcon from "./icons/PlasmicIcon__Home"; // plasmic-import: m7z1Ot2Z454b/icon
import MenuIcon from "./icons/PlasmicIcon__Menu"; // plasmic-import: DmYYd1D1uHJ9/icon
import LikeIcon from "./icons/PlasmicIcon__Like"; // plasmic-import: No-XScxtPFpx/icon
import RightArrowIcon from "./icons/PlasmicIcon__RightArrow"; // plasmic-import: 1tYQBOFCODtW/icon
import shoe20VC0STKzSnmx from "./images/shoe20.png"; // plasmic-import: v_C0sTKzSNMX/picture
import shoe28D77JegXJaJh from "./images/shoe28.png"; // plasmic-import: d77-JegXJaJH/picture
import shoe23NgUEzBMyAbQe from "./images/shoe23.png"; // plasmic-import: NgUEzBMyABQe/picture
import shoe26Bi1I4Grh0Eu from "./images/shoe26.png"; // plasmic-import: bi1_i4grh0Eu/picture
import shoe27OeX83Hn7U4R from "./images/shoe27.png"; // plasmic-import: OeX83hn7u_4r/picture
import shoe24PnZ3Ho2JEd1E from "./images/shoe24.png"; // plasmic-import: PnZ3Ho2jEd1E/picture
import shoe25WbW4TrgQh3W5 from "./images/shoe25.png"; // plasmic-import: wbW4trgQH3W5/picture
import shoe21RowScAjtNoGy from "./images/shoe21.png"; // plasmic-import: rowSCAjtNoGy/picture
import shoe2229HfgyKaGnE from "./images/shoe22.png"; // plasmic-import: 2-9HFGYKaGnE/picture
import shoe14JDryz8O42G9O from "./images/shoe14.png"; // plasmic-import: JDryz8o42g9o/picture
import shoe81Iu0GoOvUlgr from "./images/shoe8.png"; // plasmic-import: 1Iu0GoOvUlgr/picture
import shoe16A9T2EiD57Cc from "./images/shoe16.png"; // plasmic-import: a9T2EiD57-cc/picture
import shoe17ClpzGeqQGfdY from "./images/shoe17.png"; // plasmic-import: ClpzGeqQGfdY/picture
import shoe18HdHRVmGeyeo from "./images/shoe18.png"; // plasmic-import: Hd-hRVmGeyeo/picture

export type PlasmicItem__VariantMembers = {};

export type PlasmicItem__VariantsArgs = {};
type VariantPropType = keyof PlasmicItem__VariantsArgs;
export const PlasmicItem__VariantProps = new Array<VariantPropType>();

export type PlasmicItem__ArgsType = {
  container42?: React.ReactNode;
};

type ArgPropType = keyof PlasmicItem__ArgsType;
export const PlasmicItem__ArgProps = new Array<ArgPropType>("container42");

export type PlasmicItem__OverridesType = {
  root?: p.Flex<"div">;
  navBar?: p.Flex<typeof NavBar>;
  container432?: p.Flex<"div">;
  columns?: p.Flex<"div">;
  price?: p.Flex<typeof Price>;
  quantity?: p.Flex<typeof Select>;
  likeButton?: p.Flex<typeof Button>;
  addToCartButton?: p.Flex<typeof Button>;
  description?: p.Flex<"div">;
  details?: p.Flex<"div">;
  container42?: p.Flex<"div">;
  container5?: p.Flex<"div">;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultItemProps {
  container42?: React.ReactNode;
  className?: string;
}

function PlasmicItem__RenderFunc(props: {
  variants: PlasmicItem__VariantsArgs;
  args: PlasmicItem__ArgsType;
  overrides: PlasmicItem__OverridesType;
  dataFetches?: PlasmicItem__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsglcu7Rs72YfE()
  });

  return (
    <React.Fragment>
      {}
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <NavBar
            data-plasmic-name={"navBar"}
            data-plasmic-override={overrides.navBar}
            className={classNames("__wab_instance", sty.navBar)}
          />

          <section className={classNames(projectcss.all, sty.section__zxSsp)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"container432"}
              data-plasmic-override={overrides.container432}
              hasGap={true}
              className={classNames(projectcss.all, sty.container432)}
            >
              <Button
                startIcon={
                  <HomeIcon
                    className={classNames(projectcss.all, sty.svg___0Aa12)}
                    role={"img"}
                  />
                }
              >
                {"Mens"}
              </Button>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bLIus
                )}
              >
                {"/"}
              </div>

              <Button
                startIcon={
                  <HomeIcon
                    className={classNames(projectcss.all, sty.svg__duTUe)}
                    role={"img"}
                  />
                }
              >
                {"Shoes"}
              </Button>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__khlKc
                )}
              >
                {"/"}
              </div>

              <Button
                startIcon={
                  <HomeIcon
                    className={classNames(projectcss.all, sty.svg__kl3ME)}
                    role={"img"}
                  />
                }
              >
                {"Running"}
              </Button>
            </p.Stack>
          </section>

          <section className={classNames(projectcss.all, sty.section___7YzLa)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column__i9CIt)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__l3Np4)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__uza7V)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={{
                      src: shoe20VC0STKzSnmx,
                      fullWidth: 2000,
                      fullHeight: 2000,
                      aspectRatio: undefined
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___4UalC)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mMpuO)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__vVk8)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: shoe28D77JegXJaJh,
                          fullWidth: 2000,
                          fullHeight: 2000,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__goqpt)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__ql0Cb)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: shoe23NgUEzBMyAbQe,
                          fullWidth: 450,
                          fullHeight: 450,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fKbo0)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__feOuy)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__fwjOc)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: shoe26Bi1I4Grh0Eu,
                          fullWidth: 2000,
                          fullHeight: 2000,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__eBn1)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__zag2H)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: shoe27OeX83Hn7U4R,
                          fullWidth: 2000,
                          fullHeight: 2000,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__f9UdF)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__wvjLy)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__nyye)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={{
                          src: shoe24PnZ3Ho2JEd1E,
                          fullWidth: 2000,
                          fullHeight: 2000,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__xnmiL)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___6J60Z)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: shoe25WbW4TrgQh3W5,
                            fullWidth: 2000,
                            fullHeight: 2000,
                            aspectRatio: undefined
                          }}
                        />
                      ) : null}
                    </div>
                  </p.Stack>
                </p.Stack>
              </div>

              <div className={classNames(projectcss.all, sty.column__bQhAe)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___71FFb)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yJkt
                    )}
                  >
                    {"Eternity NITRO Men's Running Shoes"}
                  </div>

                  <Price
                    data-plasmic-name={"price"}
                    data-plasmic-override={overrides.price}
                    className={classNames("__wab_instance", sty.price)}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__cvrQb)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ilk5X)}
                      displayHeight={"64px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"none" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"64px" as const}
                      src={{
                        src: shoe21RowScAjtNoGy,
                        fullWidth: 450,
                        fullHeight: 450,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__vDgZ)}
                      displayHeight={"64px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"none" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"64px" as const}
                      src={{
                        src: shoe2229HfgyKaGnE,
                        fullWidth: 450,
                        fullHeight: 450,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__waefa)}
                      displayHeight={"64px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"none" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"64px" as const}
                      src={{
                        src: shoe23NgUEzBMyAbQe,
                        fullWidth: 450,
                        fullHeight: 450,
                        aspectRatio: undefined
                      }}
                    />
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__sOtX1)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7BnLj
                      )}
                    >
                      {"Size"}
                    </div>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__i4GwU)}
                    >
                      <Button colors={"lightGrayOutline" as const}>
                        {"7"}
                      </Button>

                      <Button colors={"lightGrayOutline" as const}>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mIay1
                          )}
                        >
                          {"7.5"}
                        </div>
                      </Button>

                      <Button colors={"lightGrayOutline" as const}>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wpqyx
                          )}
                        >
                          {"8"}
                        </div>
                      </Button>

                      <Button colors={"lightGrayOutline" as const}>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nJwV
                          )}
                        >
                          {"8.5"}
                        </div>
                      </Button>

                      <Button colors={"lightGrayOutline" as const}>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zzfOc
                          )}
                        >
                          {"9"}
                        </div>
                      </Button>

                      <Button colors={"lightGrayOutline" as const}>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__p2Yba
                          )}
                        >
                          {"9.5"}
                        </div>
                      </Button>

                      <Button colors={"lightGrayOutline" as const}>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___15Tv
                          )}
                        >
                          {"10"}
                        </div>
                      </Button>

                      <Button colors={"lightGrayOutline" as const}>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__x1GjK
                          )}
                        >
                          {"10.5"}
                        </div>
                      </Button>

                      <Button colors={"lightGrayOutline" as const}>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__plhb9
                          )}
                        >
                          {"11"}
                        </div>
                      </Button>

                      <Button colors={"lightGrayOutline" as const}>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___3XWb5
                          )}
                        >
                          {"11.5"}
                        </div>
                      </Button>

                      <Button colors={"lightGrayOutline" as const}>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vRxp0
                          )}
                        >
                          {"12"}
                        </div>
                      </Button>

                      <Button colors={"lightGrayOutline" as const}>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__b1Mh
                          )}
                        >
                          {"13"}
                        </div>
                      </Button>

                      <Button colors={"lightGrayOutline" as const}>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rICys
                          )}
                        >
                          {"14"}
                        </div>
                      </Button>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__uUhTd)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__f1Arg)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tfbIz
                        )}
                      >
                        {"Quantity"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__gI1LE
                        )}
                      >
                        <Select
                          data-plasmic-name={"quantity"}
                          data-plasmic-override={overrides.quantity}
                          defaultValue={"1" as const}
                        >
                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option__rdz0Q
                            )}
                            value={"1" as const}
                          >
                            {"1"}
                          </Select__Option>

                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option__lRqle
                            )}
                            value={"2" as const}
                          >
                            {"2"}
                          </Select__Option>

                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option__wfUb
                            )}
                            value={"3" as const}
                          >
                            {"3"}
                          </Select__Option>

                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option__jFpbt
                            )}
                            value={"4" as const}
                          >
                            {"4"}
                          </Select__Option>

                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option__hla6
                            )}
                            value={"5" as const}
                          >
                            {"5"}
                          </Select__Option>
                        </Select>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__maKa
                          )}
                        />

                        <Button
                          data-plasmic-name={"likeButton"}
                          data-plasmic-override={overrides.likeButton}
                          colors={"lightGrayOutline" as const}
                          iconOnly={"iconOnly" as const}
                          size={"large" as const}
                          startIcon={
                            <LikeIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__rOg
                              )}
                              role={"img"}
                            />
                          }
                        />

                        <Button
                          data-plasmic-name={"addToCartButton"}
                          data-plasmic-override={overrides.addToCartButton}
                          className={classNames(
                            "__wab_instance",
                            sty.addToCartButton
                          )}
                          colors={"black" as const}
                          link={"/cart" as const}
                          rounded={"rounded" as const}
                          size={"large" as const}
                        >
                          {"Add to cart"}
                        </Button>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <Separator
                    className={classNames(
                      "__wab_instance",
                      sty.separator___56Gjo
                    )}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__peQTo)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__arW6G
                      )}
                    >
                      {"Description"}
                    </div>

                    <div
                      data-plasmic-name={"description"}
                      data-plasmic-override={overrides.description}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.description
                      )}
                    >
                      {
                        "Let Eternity NITRO be your guide. The engineered mesh upper integrates the runGUIDE tech, designed to hug your midfoot for an effortless ride. For the midsole, NITRO foam provides superior cushioning, combining with other tech elements to give you support: a TPU heel piece for proprioception, reflectivity, and a durable rubber PUMAGRIP for all-surface traction. You lead the way, Eternity NITRO will keep you in line."
                      }
                    </div>
                  </p.Stack>

                  <Separator
                    className={classNames(
                      "__wab_instance",
                      sty.separator__pV8Ds
                    )}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__v2JGe)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dUvN
                      )}
                    >
                      {"Details"}
                    </div>

                    <div
                      data-plasmic-name={"details"}
                      data-plasmic-override={overrides.details}
                      className={classNames(projectcss.all, sty.details)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__liPo4
                        )}
                      >
                        {"Adaptive fit with midfoot wrap for secure lockdown"}
                      </div>

                      <Separator
                        className={classNames(
                          "__wab_instance",
                          sty.separator___2XIPu
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__t7WBg
                        )}
                      >
                        {"Engineered mesh upper for support"}
                      </div>

                      <Separator
                        className={classNames(
                          "__wab_instance",
                          sty.separator__yLsqS
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hhSkp
                        )}
                      >
                        {"Full lace closure for snug fit"}
                      </div>

                      <Separator
                        className={classNames(
                          "__wab_instance",
                          sty.separator__lgBx0
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gD7Op
                        )}
                      >
                        {
                          "NITRO FOAM midsole for lightweight, responsive cushioning"
                        }
                      </div>
                    </div>
                  </p.Stack>
                </p.Stack>
              </div>
            </p.Stack>
          </section>

          <section className={classNames(projectcss.all, sty.section__pxRhi)}>
            <div
              data-plasmic-name={"container42"}
              data-plasmic-override={overrides.container42}
              className={classNames(projectcss.all, sty.container42)}
            >
              {p.renderPlasmicSlot({
                defaultContents: (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__evfyd)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3DYqx
                      )}
                    >
                      {"You may also like"}
                    </div>

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__vXsvy
                      )}
                      colors={"link" as const}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__l6BZa)}
                          role={"img"}
                        />
                      }
                      showEndIcon={"showEndIcon" as const}
                    >
                      {"See more"}
                    </Button>
                  </div>
                ),

                value: args.container42
              })}
            </div>

            <div
              data-plasmic-name={"container5"}
              data-plasmic-override={overrides.container5}
              className={classNames(projectcss.all, sty.container5)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__w0H8H)}
              >
                <ProductCard
                  img={{
                    src: shoe14JDryz8O42G9O,
                    fullWidth: 840,
                    fullHeight: 840,
                    aspectRatio: undefined
                  }}
                  link={"http://google.com" as const}
                  tags={
                    <Button
                      colors={"lightGray" as const}
                      size={"small" as const}
                    >
                      {"New"}
                    </Button>
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tc6Ao
                    )}
                  >
                    {"ADIDAS ULTRABOOST DNA X LEGO® PLATES SHOES"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__a97Y
                    )}
                  >
                    {"If you can dream it, you can build it."}
                  </div>
                </ProductCard>

                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__fBhJb
                  )}
                  img={{
                    src: shoe81Iu0GoOvUlgr,
                    fullWidth: 864,
                    fullHeight: 1080,
                    aspectRatio: undefined
                  }}
                  link={"/item" as const}
                  tags={
                    <Button
                      colors={"lightGray" as const}
                      size={"small" as const}
                    >
                      {"New"}
                    </Button>
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nIzPv
                    )}
                  >
                    {"Nike Air Zoom Pegasus 38"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xesw
                    )}
                  >
                    {"If you can dream it, you can build it."}
                  </div>
                </ProductCard>

                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__rnQpw
                  )}
                  img={{
                    src: shoe16A9T2EiD57Cc,
                    fullWidth: 840,
                    fullHeight: 840,
                    aspectRatio: undefined
                  }}
                  link={"/item" as const}
                  tags={
                    <Button
                      colors={"lightGray" as const}
                      size={"small" as const}
                    >
                      {"New"}
                    </Button>
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qdlV0
                    )}
                  >
                    {"Club C 85 Vintage Men's Shoes"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5CwKy
                    )}
                  >
                    {"If you can dream it, you can build it."}
                  </div>
                </ProductCard>

                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__gmCy
                  )}
                  img={{
                    src: shoe17ClpzGeqQGfdY,
                    fullWidth: 864,
                    fullHeight: 1080,
                    aspectRatio: undefined
                  }}
                  link={"/item" as const}
                  tags={
                    <Button
                      colors={"lightGray" as const}
                      size={"small" as const}
                    >
                      {"New"}
                    </Button>
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mOh17
                    )}
                  >
                    {"Nike Air Max Genome"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bEYmr
                    )}
                  >
                    {"If you can dream it, you can build it."}
                  </div>
                </ProductCard>

                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__u97Ck
                  )}
                  img={{
                    src: shoe18HdHRVmGeyeo,
                    fullWidth: 840,
                    fullHeight: 840,
                    aspectRatio: undefined
                  }}
                  link={"/item" as const}
                  tags={
                    <Button
                      colors={"lightGray" as const}
                      size={"small" as const}
                    >
                      {"New"}
                    </Button>
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sjYWw
                    )}
                  >
                    {"ULTRABOOST DNA 1.0 SHOES"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7XpXw
                    )}
                  >
                    {"If you can dream it, you can build it."}
                  </div>
                </ProductCard>

                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__vhhWw
                  )}
                  link={"/item" as const}
                  tags={
                    <Button
                      colors={"lightGray" as const}
                      size={"small" as const}
                    >
                      {"New"}
                    </Button>
                  }
                />
              </p.Stack>
            </div>
          </section>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navBar",
    "container432",
    "columns",
    "price",
    "quantity",
    "likeButton",
    "addToCartButton",
    "description",
    "details",
    "container42",
    "container5",
    "footer"
  ],
  navBar: ["navBar"],
  container432: ["container432"],
  columns: [
    "columns",
    "price",
    "quantity",
    "likeButton",
    "addToCartButton",
    "description",
    "details"
  ],
  price: ["price"],
  quantity: ["quantity"],
  likeButton: ["likeButton"],
  addToCartButton: ["addToCartButton"],
  description: ["description"],
  details: ["details"],
  container42: ["container42"],
  container5: ["container5"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navBar: typeof NavBar;
  container432: "div";
  columns: "div";
  price: typeof Price;
  quantity: typeof Select;
  likeButton: typeof Button;
  addToCartButton: typeof Button;
  description: "div";
  details: "div";
  container42: "div";
  container5: "div";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicItem__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicItem__VariantsArgs;
    args?: PlasmicItem__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicItem__Fetches;
  } & Omit<PlasmicItem__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicItem__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicItem__ArgProps,
      internalVariantPropNames: PlasmicItem__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicItem__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicItem";
  } else {
    func.displayName = `PlasmicItem.${nodeName}`;
  }
  return func;
}

export const PlasmicItem = Object.assign(
  // Top-level PlasmicItem renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navBar: makeNodeComponent("navBar"),
    container432: makeNodeComponent("container432"),
    columns: makeNodeComponent("columns"),
    price: makeNodeComponent("price"),
    quantity: makeNodeComponent("quantity"),
    likeButton: makeNodeComponent("likeButton"),
    addToCartButton: makeNodeComponent("addToCartButton"),
    description: makeNodeComponent("description"),
    details: makeNodeComponent("details"),
    container42: makeNodeComponent("container42"),
    container5: makeNodeComponent("container5"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicItem
    internalVariantProps: PlasmicItem__VariantProps,
    internalArgProps: PlasmicItem__ArgProps
  }
);

export default PlasmicItem;
/* prettier-ignore-end */
